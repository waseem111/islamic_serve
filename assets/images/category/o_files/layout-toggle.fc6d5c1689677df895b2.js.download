(window.webpackJsonp=window.webpackJsonp||[]).push([["layout-toggle"],{f3hN:function(e,t,n){"use strict";n.r(t),n.d(t,"ToolingInfo",(function(){return j})),n.d(t,"LayoutToggle",(function(){return S})),n.d(t,"LayoutToggleTemplate",(function(){return w})),n.d(t,"LayoutToggleStyles",(function(){return M}));var i=n("Zn5T"),a=n("A03o");const o=Object(a.a)(i.a.layoutToggle,"A sample Peregrine Web Component experience",{});var l=n("D57K"),c=n("s9+9"),s=n("o1cI"),r=n("b/Qm"),d=n("Qf6H"),g=n("8X6I"),h=n("SSDD"),u=n("u5KZ"),p=n("Am8i"),m=n("IqCT"),v=n("oePG"),y=n("d0Z1"),T=n("+Ht2"),C=n("p1iw");class S extends m.a{constructor(){super(...arguments),this.handleOnScroll=()=>{const e=scrollY<100&&this.layoutState.imageOfTheDayEnabled&&("headingsonly"===this.layoutState.selectedFeedDisplaySetting||"peek"===this.layoutState.selectedFeedDisplaySetting);e!=this.isFeedTranslucent&&(this.isFeedTranslucent=e)}}experienceConnected(){this.templateReady=!1,this.populateTelemetryTags(),this.pageSettingsConnector=Object(T.c)(c.a.ChromiumPageSettings),this.pageSettingsConnector&&Object(y.c)(c.a.ChromiumPageSettings,e=>{this.layoutState=e;const t=scrollY<100&&e.imageOfTheDayEnabled&&("headingsonly"===e.selectedFeedDisplaySetting||"peek"===e.selectedFeedDisplaySetting);this.isFeedTranslucent=t;const n=matchMedia("(prefers-color-scheme:dark)");this.isDarkBackground=n&&n.matches,this.templateReady=!0;const i=null===e.isSingleColumn&&this.config.renderSingleColumn;this.isSingleColumn=s.a.getPslFeedLayoutType===r.b.SingleColumn||i})}getExperienceType(){return i.a.layoutToggle}shadowDomPopulated(){addEventListener("scroll",this.handleOnScroll)}disconnectedCallback(){removeEventListener("scroll",this.handleOnScroll)}populateTelemetryTags(){this.telemetryObject&&(this.singleColumnButtonTelemetryTag=this.telemetryObject.addOrUpdateChild({name:"LayoutSingleColumn",content:{headline:"Toggle for SingleColumn"}}).getMetadataTag(),this.multiColumnButtonTelemetryTag=this.telemetryObject.addOrUpdateChild({name:"LayoutMultiColumn",content:{headline:"Toggle for MultiColumn"}}).getMetadataTag())}updateToggleSelection(e,t){return Object(l.a)(this,void 0,void 0,(function*(){const n=t&&t.target;if(!n||this.isSingleColumn===e)return;const i="path"===n.tagName;u.a.sendActionEvent(i?n.parentElement:n,p.a.Click,p.b.Navigate),this.recordUserLayoutChoice(e),s.a.saveFeedLayoutSetting(e?r.b.SingleColumn:r.b.MultiColumn,r.a.Ntp),C.a.isPivotManagerSwitched=!0,Object(g.c)(h.a.FeedLayoutSwitch)}))}recordUserLayoutChoice(e){const t={setting:"single_column",source:"ntp",timestamp:(new Date).getTime(),value:e};d.a.savePreferenceSetting("single_column",t)}}Object(l.d)([v.d],S.prototype,"isSingleColumn",void 0),Object(l.d)([v.d],S.prototype,"isFeedTranslucent",void 0),Object(l.d)([v.d],S.prototype,"isDarkBackground",void 0),Object(l.d)([v.d],S.prototype,"templateReady",void 0);var b=n("6BDD"),f=n("eUhr");const k=b.b`
    <div id="layoutToggle" class="layoutToggle">
        <span class=${e=>O(e,"iconContainer linearFeedIcon",e.isSingleColumn)}
        ${Object(f.b)(e=>e.singleColumnButtonTelemetryTag)}
            @click=${(e,t)=>null==e?void 0:e.updateToggleSelection(!0,t.event)}
        >
            ${'<svg width="16" height="16" viewBox="0 0 16 16" fill="none"><path d="M0 1.5C0 .67.67 0 1.5 0h1C3.33 0 4 .67 4 1.5v1C4 3.33 3.33 4 2.5 4h-1A1.5 1.5 0 0 1 0 2.5v-1ZM1.5 1a.5.5 0 0 0-.5.5v1c0 .28.22.5.5.5h1a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5h-1ZM0 7.5C0 6.67.67 6 1.5 6h1C3.33 6 4 6.67 4 7.5v1c0 .83-.67 1.5-1.5 1.5h-1A1.5 1.5 0 0 1 0 8.5v-1ZM1.5 7a.5.5 0 0 0-.5.5v1c0 .28.22.5.5.5h1a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5h-1ZM0 13.5c0-.83.67-1.5 1.5-1.5h1c.83 0 1.5.67 1.5 1.5v1c0 .83-.67 1.5-1.5 1.5h-1A1.5 1.5 0 0 1 0 14.5v-1Zm1.5-.5a.5.5 0 0 0-.5.5v1c0 .28.22.5.5.5h1a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5h-1ZM6 2.5c0-.28.22-.5.5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5Zm0 6c0-.28.22-.5.5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5Zm0 6c0-.28.22-.5.5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5Z" fill="#000" fill-opacity=".55"/></svg>'}
        </span>
        <span class=${e=>O(e,"iconContainer gridFeedIcon",!e.isSingleColumn)}
        ${Object(f.b)(e=>e.multiColumnButtonTelemetryTag)}
            @click=${(e,t)=>null==e?void 0:e.updateToggleSelection(!1,t.event)}
        >
            ${'<svg width="20" height="20" viewBox="0 0 20 19" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M0 .1v8.78h9.33V.1H0Zm1.33 7.53V1.35H8v6.28H1.33ZM0 18.93v-8.8h9.33v8.8H0Zm1.33-1.26v-6.28H8v6.28H1.33Zm9.34 1.25v-8.78H20v8.78h-9.33ZM12 17.67v-6.28h6.67v6.28H12ZM10.67.1H20v8.78h-9.33V.1Zm8 1.25v6.28H12V1.35h6.67Z" fill="#black" fill-opacity=".55"/></svg>'}
        </span>   
    </div>
`,O=(e,t,n)=>(t+=e.isDarkBackground||e.isFeedTranslucent?" dark":" light",t+=n?"":" unselected"),w=b.b`
    ${e=>k}
`;var F=n("CzTk"),Z=n("4X57");const x=Z.a`
.layoutToggle {
    margin-left: 4px;
}

.gridFeedIcon {
    margin-left: 6px;
}
`,D=Z.a`
.layoutToggle {
    margin-right: 4px;
}

.gridFeedIcon {
    margin-right: 6px;
}
`,M=Z.a`
    .layoutToggle {
        background: none;
        display: flex;
        padding-top: 1px;
        width: fit-content;
    }

    .iconContainer {
        border-radius: 6px;
        width: 30px;
        height: 30px;
    }

    .iconContainer svg, .iconContainer path {
        fill: inherit;
        fill-opacity: inherit;
    }

    .gridFeedIcon svg {
        padding: 5px;
    }

    .linearFeedIcon svg {
        padding: 7px;
    }

    .dark, .dark:hover {
        background: gray;
        fill: white;
    }

    .light, .light:hover {
        background: #EAF1FA;
        fill: #0078D4;
    }

    .unselected {
        background: none;
        cursor: pointer;
        fill: gray;
    }

`.withBehaviors(new F.a(x,D)),j={experienceConfigSchema:o}}}]);